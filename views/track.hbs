<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Page</title>
  <link rel="icon" href="/logo.jpeg" type="image/icon type">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Roboto', sans-serif;
    }

    body {
      background-image: url('/moon.jpg');
      background-repeat: no-repeat;
      background-position: center center;
      background-attachment: fixed;
      background-size: cover;
      color: white;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      position: relative;
    }
    
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh;
      background: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(10px);
      z-index: -1;
    }

        /* Navbar Styling */
    .navbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 30px;
      background: transparent;
      position: fixed;
      width: 100%;
      top: 0;
      z-index: 1000;
    }

    .logo {
      display: flex;
      align-items: center;
    }

    .logo img {
      height: 40px;
      margin-right: 10px;
      transition: transform 0.3s ease;
    }

    .logo img:hover {
      transform: rotate(10deg) scale(1.1);
    }

    .logo span {
      font-size: 24px;
      font-weight: bold;
      letter-spacing: 2px;
      color: #fff;
      text-shadow: 0px 0px 5px rgba(255, 255, 255, 0.8);
    }

    .nav-buttons {
      display: flex;
      gap: 15px;
    }

    .nav-buttons a {
      display: inline-block;
      padding: 10px 20px;
      margin-left: 15px;
      background-image: linear-gradient(45deg, #6a11cb, #2575fc);
      color: #fff;
      text-decoration: none;
      border-radius: 25px;
      font-size: 16px;
      font-weight: bold;
      transition: background-image 0.3s ease, transform 0.3s ease;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      position: relative;
    }

    .nav-buttons a::after {
      content: '';
      position: absolute;
      width: 0%;
      height: 2px;
      bottom: -5px;
      left: 0;
      background-color: #fff;
      transition: width 0.3s;
    }

    .nav-buttons a:hover::after {
      width: 100%;
    }

    .nav-buttons a:hover {
      background-image: linear-gradient(45deg, #5d09b1, #1f65e3);
      transform: scale(1.05);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
    }

    .container {
      background: rgba(255, 255, 255, 0.1);
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.6);
      backdrop-filter: blur(15px);
      width: 90%;
      max-width: 1100px;
      margin-top: 100px;
      display: flex;
      flex-direction: column;
    }

    header h1 {
      font-size: 36px;
      font-weight: bold;
      text-transform: uppercase;
      letter-spacing: 2px;
      background: linear-gradient(45deg, #00c6ff, #0072ff);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin-bottom: 15px;
      text-shadow: 3px 3px 12px rgba(0, 114, 255, 0.8);
    }

    header p {
      font-size: 22px;
      font-weight: 500;
      color: rgba(255, 255, 255, 0.9);
      text-shadow: 1px 1px 5px rgba(255, 255, 255, 0.5);
    }

    .board {
      display: flex;
      justify-content: space-between;
      gap: 20px;
      padding: 20px 0;
      flex-wrap: wrap;
    }

    .column {
      flex: 1;
      background: rgba(255, 255, 255, 0.12);
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 6px 15px rgba(255, 255, 255, 0.2);
      min-height: 450px;
      backdrop-filter: blur(15px);
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .column h2 {
      background: linear-gradient(45deg, #6a11cb, #2575fc);
      color: white;
      padding: 12px;
      border-radius: 6px;
      text-align: center;
      margin-bottom: 10px;
      text-shadow: 3px 3px 12px rgba(0, 114, 255, 0.8);
    }

    .task {
    width: 220px; 
    min-height: 160px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    padding: 15px;
    font-size: 14px;
    font-weight: 500;
    border-radius: 12px;
    cursor: grab;
    transition: transform 0.3s ease-in-out, box-shadow 0.3s;
    overflow-wrap: break-word; 
    word-wrap: break-word;
    text-align: left; 
    line-height: 1.5;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    margin-bottom: 15px;}

    .task span {
    display: block;
    margin-bottom: 6px; 
    font-size: 15px;}

    /* Sticky Note Colors */
    .task:nth-child(odd) {
  background: linear-gradient(135deg, #ff7f50, #ffb347);
}

.task:nth-child(even) {
  background: linear-gradient(135deg, #72d572, #4dd0e1);
}

.task:nth-child(5) {
  background: linear-gradient(135deg, #ba68c8, #ff8a80);
}


    .task:hover {
      transform: scale(1.08) rotate(2deg);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.5);
    }

    .dragging {
      opacity: 0.7;
      transform: scale(1.15) rotate(-2deg);
    }
  </style>
</head>
<body>

  <div class="navbar">
    <div class="logo">
      <a href="/"><img src="/logo.jpeg" alt="Git Helper Logo"></a>
      <span>Git Helper</span>
    </div>
    <div class="nav-buttons">
      <a href="/"><i class="fas fa-home"></i> Home</a>
      <a href="/api/user"><i class="fas fa-arrow-left"></i> Back</a>
    </div>
  </div>

<div class="container">
    <header>
        <h1>YOUR DASHBOARD</h1>
        <p>Manage and monitor your workflow with ease.</p>
    </header>

    <div class="board">
    <div class="column" id="todo">
        <h2>To-Do List</h2>

        <div class="task" draggable="true">
            <span><strong>Assigned at:</strong> 2025-03-08</span>
            <span><strong>Assigned to:</strong> Alice (<a href="https://github.com/alice" target="_blank">GitHub</a>)</span>
            <span><strong>Task:</strong> Fix navbar alignment</span>
        </div>

        <div class="task" draggable="true">
            <span><strong>Assigned at:</strong> 2025-03-07</span>
            <span><strong>Assigned to:</strong> Bob (<a href="https://github.com/bob" target="_blank">GitHub</a>)</span>
            <span><strong>Task:</strong> Optimize database queries</span>
        </div>

        <div class="task" draggable="true">
            <span><strong>Assigned at:</strong> 2025-03-06</span>
            <span><strong>Assigned to:</strong> Charlie (<a href="https://github.com/charlie" target="_blank">GitHub</a>)</span>
            <span><strong>Task:</strong> Implement authentication system</span>
        </div>
    </div>

    <div class="column" id="working">
        <h2>In Progress</h2>
        <div class="task" draggable="true">
            <span><strong>Assigned at:</strong> 2025-03-05</span>
            <span><strong>Assigned to:</strong> Dave (<a href="https://github.com/dave" target="_blank">GitHub</a>)</span>
            <span><strong>Task:</strong> Design homepage UI</span>
        </div>
    </div>

    <div class="column" id="completed">
        <h2>Completed</h2>
        <div class="task" draggable="true">
            <span><strong>Assigned at:</strong> 2025-03-04</span>
            <span><strong>Assigned to:</strong> Eve (<a href="https://github.com/eve" target="_blank">GitHub</a>)</span>
            <span><strong>Task:</strong> Improve site responsiveness</span>
        </div>
    </div>
</div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
      const tasks = document.querySelectorAll('.task');
      const columns = document.querySelectorAll('.column');

      tasks.forEach(task => {
          task.addEventListener('dragstart', (e) => {
              task.classList.add('dragging');
              requestAnimationFrame(() => task.style.opacity = "0.5"); 
          });

          task.addEventListener('dragend', () => {
              task.classList.remove('dragging');
              task.style.opacity = "1";
          });
      });

      columns.forEach(column => {
          column.addEventListener('dragover', (e) => {
              e.preventDefault();
              const dragging = document.querySelector('.dragging');
              const afterElement = getDragAfterElement(column, e.clientY);
              
              column.classList.add('active-drop'); 

              if (afterElement) {
                  column.insertBefore(dragging, afterElement);
              } else {
                  column.appendChild(dragging);
              }
          });

          column.addEventListener('dragenter', () => {
              column.classList.add('highlight');
          });

          column.addEventListener('dragleave', () => {
              column.classList.remove('highlight', 'active-drop');
          });

          column.addEventListener('drop', () => {
              column.classList.remove('highlight', 'active-drop');
          });
      });

      function getDragAfterElement(column, y) {
          const draggableElements = [...column.querySelectorAll('.task:not(.dragging)')];
          let closest = null;
          let minOffset = Number.NEGATIVE_INFINITY;

          draggableElements.forEach(child => {
              const box = child.getBoundingClientRect();
              const offset = y - box.top - box.height / 2;

              if (offset < 0 && offset > minOffset) {
                  minOffset = offset;
                  closest = child;
              }
          });

          return closest;
      }
  });
</script>
</body>
</html>
