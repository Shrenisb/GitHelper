<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Response Details</title>
  <link rel="icon" href="/logo.jpeg" type="image/icon type">
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <!-- Font Awesome for Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Roboto', sans-serif;
    }

    body {
      background-image: url("/1329272.png");
      background-repeat: no-repeat;
      background-position: center center;
      background-attachment: fixed;
      background-size: cover;
      height: 100vh;
      color: white;
      overflow-x: hidden;
      scroll-behavior: smooth;
    }

    /* Navbar Styling */
    .navbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 30px;
      background: transparent;
      position: fixed;
      width: 100%;
      top: 0;
      z-index: 1000;
    }

    .logo {
      display: flex;
      align-items: center;
    }

    .logo img {
      height: 40px;
      margin-right: 10px;
      transition: transform 0.3s ease;
    }

    .logo img:hover {
      transform: rotate(10deg) scale(1.1);
    }

    .logo span {
      font-size: 24px;
      font-weight: bold;
      letter-spacing: 2px;
      color: #fff;
      text-shadow: 0px 0px 5px rgba(255, 255, 255, 0.8);
    }

    .nav-buttons {
      display: flex;
      gap: 15px;
    }

    .nav-buttons a {
      display: inline-block;
      padding: 10px 20px;
      margin-left: 15px;
      background-image: linear-gradient(45deg, #6a11cb, #2575fc);
      color: #fff;
      text-decoration: none;
      border-radius: 25px;
      font-size: 16px;
      font-weight: bold;
      transition: background-image 0.3s ease, transform 0.3s ease;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      position: relative;
    }

    .nav-buttons a::after {
      content: '';
      position: absolute;
      width: 0%;
      height: 2px;
      bottom: -5px;
      left: 0;
      background-color: #fff;
      transition: width 0.3s;
    }

    .nav-buttons a:hover::after {
      width: 100%;
    }

    .nav-buttons a:hover {
      background-image: linear-gradient(45deg, #5d09b1, #1f65e3);
      transform: scale(1.05);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
    }

    .container {
      width: 90%;
      max-width: 1100px;
      margin: 120px auto;
      padding: 30px;
      background: rgba(255, 255, 255, 0.12);
      border-radius: 22px;
      backdrop-filter: blur(25px);
      box-shadow: 0 14px 40px rgba(0, 0, 0, 0.75);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .container:hover {
      transform: translateY(-5px);
      box-shadow: 0 16px 45px rgba(0, 0, 0, 0.85);
    }

    h1 {
      font-size: 36px;
      margin-bottom: 30px;
      text-align: center;
      color: #fff;
      text-shadow: 4px 4px 15px rgba(0, 0, 0, 0.9);
      letter-spacing: 1px;
      font-weight: 700;
    }

    h2 {
      color: #f0f0f0;
      font-weight: bold;
      text-align: center;
      font-size: 22px;
      text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7);
      letter-spacing: 0.8px;
      margin-bottom: 20px;
    }

    .column {
      flex: 1;
      background: rgba(255, 255, 255, 0.15);
      padding: 25px;
      border-radius: 15px;
      box-shadow: 0 8px 20px rgba(255, 255, 255, 0.25);
      min-height: 450px;
      backdrop-filter: blur(18px);
      display: flex;
      flex-direction: column;
      align-items: center;
      transition: transform 0.3s, box-shadow 0.3s;
    }

    .column:hover {
      transform: scale(1.03);
      box-shadow: 0 10px 25px rgba(255, 255, 255, 0.3);
    }

    .column h2 {
      color: #fff;
      padding: 15px;
      border-radius: 8px;
      text-align: center;
      margin-bottom: 15px;
      font-size: 24px;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(12px);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }

    .task {
      width: 220px;
      min-height: 180px;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: center;
      padding: 15px;
      font-size: 14px;
      font-weight: 500;
      border-radius: 12px;
      cursor: grab;
      transition: transform 0.3s ease-in-out, box-shadow 0.3s;
      word-wrap: break-word;
      text-align: left;
      line-height: 1.5;
      box-shadow: 0 6px 15px rgba(255, 255, 255, 0.25);
      margin-bottom: 15px;
      max-width: 100%;
      white-space: normal;
      overflow: hidden;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(12px);
    }

    .task:hover {
      transform: scale(1.05);
      box-shadow: 0 8px 20px rgba(255, 255, 255, 0.3);
    }


    .task span {
      display: block;
      margin-bottom: 8px;
      font-size: 18px;
      font-weight: bold;
      word-break: break-word;
      color: #f8f8f8;
      text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.6);
    }
    
    .task {
      background: linear-gradient(135deg, #66cdaa, #36b6e2);
      box-shadow: 0 6px 15px rgba(54, 182, 226, 0.4);
    }

    .board {
      display: flex;
      justify-content: center;
      gap: 25px;
      padding: 25px 0;
      flex-wrap: wrap;
      align-items: flex-start;
    }

    .task p {
  margin-bottom: 8px;
  font-size: 16px;
  color: rgba(255, 255, 255, 0.95);
  text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.6);
}


    .task p i {
  margin-right: 8px;
  color: #f0f0f0;
}


    .task p a.github-id i {
  margin-right: 0;
}

    .github-id {
  color: #e3efff;
  text-decoration: none;
  font-weight: 700;
  transition: color 0.3s ease, transform 0.2s ease;
  display: inline-flex;
  align-items: center;
}

    .github-id i {
      margin-left: 5px;
    }

    .github-id:hover {
      color: #b3a291;
    }

    .buttons {
  display: flex;
  gap: 15px;
  flex-wrap: wrap;
}

.buttons a {
  display: inline-block;
  padding: 10px 22px;
  background-image: linear-gradient(45deg, #5a0eb2, #1d5ae6);
  color: #fff;
  text-decoration: none;
  border-radius: 30px;
  font-size: 16px;
  font-weight: bold;
  transition: background-image 0.3s ease, transform 0.3s ease;
  box-shadow: 0 5px 12px rgba(0, 0, 0, 0.3);
  position: relative;
}

    .buttons a::after {
      content: '';
      position: absolute;
      width: 0%;
      height: 2px;
      bottom: -5px;
      left: 0;
      background-color: rgba(255, 255, 255, 0.8);
      transition: width 0.3s ease;
    }

    .buttons a:hover::after {
      width: 100%;
    }

    .buttons a:hover {
      background-image: linear-gradient(45deg, #5d09b1, #1f65e3);
      transform: scale(1.08);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.6);
    }

    .scroll-top {
    position: fixed;
    bottom: 30px;
    right: 30px;
    background-image: linear-gradient(45deg, #6a11cb, #2575fc);
    color: white;
    padding: 14px 20px;
    border-radius: 50%;
    box-shadow: 0 8px 18px rgba(0, 0, 0, 0.5);
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    z-index: 1001;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .scroll-top:hover {
    transform: scale(1.15);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.7);
  }

  .scroll-top:active {
    transform: scale(1.05);
  }

    .mod-btn {
      padding: 12px 24px;
      background-image: linear-gradient(45deg, #7a1cc3, #2a6dfc);
      color: #fff;
      border-radius: 30px;
      text-decoration: none;
      transition: background-image 0.3s ease, transform 0.3s ease;
      box-shadow: 0 6px 14px rgba(0, 0, 0, 0.35);
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      gap: 12px;
      font-size: 17px;
      font-weight: bold;
    }

    .mod-btn:hover {
      background-image: linear-gradient(45deg, #6918b0, #1e5cd4);
      transform: scale(1.07);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
      cursor: pointer;
    }
  </style>
</head>

<body>
  <!-- Navbar -->
  <div class="navbar">
    <div class="logo">
      <a href="/"><img src="/logo.jpeg" alt="Git Helper Logo"></a>
      <span>Git Helper</span>
    </div>
    <div class="nav-buttons">
      <a href="/"><i class="fas fa-home"></i> Home</a>
      <a href="/api/user"><i class="fas fa-arrow-left"></i> Back</a>
    </div>
  </div>


  <div class="container">
    <h1>Task Tracking</h1>
    <div class="board">
      <div class="column" id="todo">
        <h2>To-Do List</h2>
        {{#each tasks}}
          {{#ifCond status "To Do"}}
            <div class="task">
              <p><strong><i class="fas fa-calendar-alt"></i> Assigned at:</strong> {{assigned_at}}</p>
              <p><strong><i class="fas fa-user-check"></i>Assigned by:</strong> {{assigned_by.username}} (GitHub: <a
                  class="github-id" href="https://github.com/{{assigned_by.github_id}}" target="_blank"><i
                    class="fas fa-external-link-alt"></i>{{assigned_by.github_id}}</a>)</p>
              <p><strong><i class="fas fa-tasks"></i> Task:</strong> {{description}}</p>
              <p><strong><a class="github-id" href="{{repository_link}}" target="_blank"><i
                      class="fas fa-external-link-alt"></i>Link To Repository</strong></a></p>
              <button class="mod-btn" data-task-id="{{taskId}}">Move to In Progress</button>
            </div>
        {{else}}
          {{/ifCond}}
        {{/each}}
      </div>
      <div class="column" id="working">
        <h2>In Progress</h2>
        {{#each tasks}}
          {{#ifCond status "Working"}}
            <div class="task">
              <p><strong><i class="fas fa-calendar-alt"></i> Assigned at:</strong> {{assigned_at}}</p>
              <p><strong><i class="fas fa-user-check"></i>Assigned by:</strong> {{assigned_by.username}} (GitHub: <a
                  class="github-id" href="https://github.com/{{assigned_by.github_id}}" target="_blank"><i
                    class="fas fa-external-link-alt"></i>{{assigned_by.github_id}}</a>)</p>
              <p><strong><i class="fas fa-tasks"></i> Task:</strong> {{description}}</p>
              <p><strong><a class="github-id" href="{{repository_link}}" target="_blank"><i
                      class="fas fa-external-link-alt"></i>Link To Repository</strong></a></p>
              <button class="mod-btn" data-task-id="{{taskId}}">Move to Completed</button>
            </div>
        {{else}}
          {{/ifCond}}
        {{/each}}
      </div>
      <div class="column" id="completed">
        <h2>Completed</h2>
        {{#each tasks}}
          {{#ifCond status "Completed"}}
            <div class="task">
              <p><strong><i class="fas fa-calendar-alt"></i> Assigned at:</strong> {{assigned_at}}</p>
              <p><strong><i class="fas fa-user-check"></i>Assigned by:</strong> {{assigned_by.username}} (GitHub: <a
                  class="github-id" href="https://github.com/{{assigned_by.github_id}}" target="_blank"><i
                    class="fas fa-external-link-alt"></i>{{assigned_by.github_id}}</a>)</p>
              <p><strong><i class="fas fa-tasks"></i> Task:</strong> {{description}}</p>
              <p><strong><a class="github-id" href="{{repository_link}}" target=" _blank"><i
                      class="fas fa-external-link-alt"></i>Link To Repository</strong></a></p>
            </div>
        {{else}}
          {{/ifCond}}
        {{/each}}
      </div>
    </div>
  </div>
  </div>
  <!-- Scroll-to-top button -->
  <div class="scroll-top" onclick="window.scrollTo({ top: 0, behavior: 'smooth' });">
    <i class="fas fa-arrow-up"></i>
</div>

<script>
  // Optimized Scroll Event for Navbar
  const navbar = document.getElementById('navbar');
  if (navbar) {
    let lastScrollY = 0;
    window.addEventListener('scroll', () => {
      if (window.scrollY > 50 && lastScrollY <= 50) {
        navbar.classList.add('scrolled');
      } else if (window.scrollY <= 50 && lastScrollY > 50) {
        navbar.classList.remove('scrolled');
      }
      lastScrollY = window.scrollY;
    });
  }

  // Attach click event to buttons safely
  document.querySelectorAll('.mod-btn').forEach(button => {
    button.addEventListener('click', function () {
      const taskId = this.dataset.taskId; // Cleaner way to get data attribute
      if (taskId) {
        window.location.href = `/query/update/${taskId}`;
      }
    });
  });
</script>
</body>

</html>