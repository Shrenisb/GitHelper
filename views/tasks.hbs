<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Response Details</title>
  <link rel="icon" href="/logo.jpeg" type="image/icon type">
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <!-- Font Awesome for Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Roboto', sans-serif;
    }

    body {
      background-image: url("/1329272.png");
      background-repeat: no-repeat;
      background-position: center center;
      background-attachment: fixed;
      background-size: cover;
      height: 100vh;
      color: white;
      overflow-x: hidden;
      scroll-behavior: smooth;
    }

    .navbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 30px;
      background: transparent;
      position: fixed;
      width: 100%;
      top: 0;
      z-index: 1000;
      transition: background 0.3s ease;
    }

    .logo-section {
      display: flex;
      align-items: center;
    }

    .logo-section img {
      height: 40px;
      margin-right: 10px;
      transition: transform 0.3s ease;
    }

    .logo-section img:hover {
      transform: rotate(10deg);
    }

    .logo-section span {
      font-size: 24px;
      font-weight: bold;
      letter-spacing: 2px;
      color: #fff;
      text-shadow: 0 0 5px rgba(255, 255, 255, 0.8);
    }

    .container {
      width: 90%;
      max-width: 1100px;
      margin: 120px auto;
      padding: 25px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 20px;
      backdrop-filter: blur(15px);
      box-shadow: 0 12px 35px rgba(0, 0, 0, 0.6);
    }

    h1 {
      font-size: 32px;
      margin-bottom: 30px;
      text-align: center;
      color: #fff;
      text-shadow: 3px 3px 10px rgba(0, 0, 0, 0.8);
    }

    h2 {
      color: white;
      font-weight: bold;
      justify-items: center;
      text-align: center;
      align-items: center;
      font-size: 20px;
    }

    .column {
      flex: 1;
      background: rgba(255, 255, 255, 0.12);
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 6px 15px rgba(255, 255, 255, 0.2);
      min-height: 450px;
      backdrop-filter: blur(15px);
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .column h2 {
      background: linear-gradient(45deg, #6a11cb, #2575fc);
      color: white;
      padding: 12px;
      border-radius: 6px;
      text-align: center;
      margin-bottom: 10px;
      text-shadow: 3px 3px 12px rgba(0, 114, 255, 0.8);
    }

    .task {
      width: 220px;
      min-height: 160px;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: center;
      padding: 15px;
      font-size: 14px;
      font-weight: 500;
      border-radius: 12px;
      cursor: grab;
      transition: transform 0.3s ease-in-out, box-shadow 0.3s;
      overflow-wrap: break-word;
      word-wrap: break-word;
      text-align: left;
      line-height: 1.5;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
      margin-bottom: 15px;
    }

    .task span {
      display: block;
      margin-bottom: 6px;
      font-size: 15px;
    }

    /* Sticky Note Colors */
    .task:nth-child(odd) {
      background: linear-gradient(135deg, #ff7f50, #ffb347);
    }

    .task:nth-child(even) {
      background: linear-gradient(135deg, #72d572, #4dd0e1);
    }

    .task:nth-child(5) {
      background: linear-gradient(135deg, #ba68c8, #ff8a80);
    }

    .task:hover {
      transform: scale(1.08) rotate(2deg);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.5);
    }

    .dragging {
      opacity: 0.7;
      transform: scale(1.15) rotate(-2deg);
    }

    .board {
      display: flex;
      justify-content: space-between;
      gap: 20px;
      padding: 20px 0;
      flex-wrap: wrap;
    }

    .task p {
      display: flex;
      align-items: center;
      margin-bottom: 5px;
    }

    .task p i {
      margin-right: 8px;
    }

    .task p a.github-id i {
      margin-right: 0;
    }

    .github-id {
      color: #1e90ff;
      text-decoration: none;
      font-weight: 700;
      transition: color 0.3s ease;
      display: inline-flex;
      align-items: center;
    }

    .github-id i {
      margin-left: 5px;
    }

    .github-id:hover {
      color: #ff8a00;
    }

    .buttons {
      display: flex;
      gap: 15px;
    }

    .buttons a {
      display: inline-block;
      padding: 10px 20px;
      margin-left: 15px;
      background-image: linear-gradient(45deg, #6a11cb, #2575fc);
      color: #fff;
      text-decoration: none;
      border-radius: 25px;
      font-size: 16px;
      font-weight: bold;
      transition: background-image 0.3s ease, transform 0.3s ease;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      position: relative;
    }

    .buttons a::after {
      content: '';
      position: absolute;
      width: 0%;
      height: 2px;
      bottom: -5px;
      left: 0;
      background-color: #fff;
      transition: width 0.3s;
    }

    .buttons a:hover::after {
      width: 100%;
    }

    .buttons a:hover {
      background-image: linear-gradient(45deg, #5d09b1, #1f65e3);
      transform: scale(1.05);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
    }

    .scroll-top {
      position: fixed;
      bottom: 30px;
      right: 30px;
      background-image: linear-gradient(45deg, #6a11cb, #2575fc);
      color: white;
      padding: 12px 18px;
      border-radius: 50%;
      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.3s ease;
      z-index: 1001;
    }

    .scroll-top:hover {
      background-image: linear-gradient(45deg, #5d09b1, #1f65e3);
      transform: scale(1.15);
    }
  </style>
</head>

<body>
  <!-- Navbar -->
  <div class="navbar" id="navbar">
    <div class="logo-section">
      <a href="/"><img src="/logo.jpeg" alt="Git Helper Logo"></a>
      <span>Git Helper</span>
    </div>
    <div class="buttons">
      <a href="/api/user" class="btn"><i class="fas fa-arrow-left"></i> Back to Dashboard</a>
    </div>
  </div>
  <div class="container">
    <h1>Task Tracking</h1>
    <div class="board">
      <div class="column" id="todo">
        <h2>To-Do List</h2>
        {{#each tasks}}
          {{#ifCond status "To Do"}}
            <div class="task" draggable="true">
              <p><strong><i class="fas fa-calendar-alt"></i> Assigned at:</strong> {{assigned_at}}</p>
              <p><strong><i class="fas fa-user-check"></i>Assigned by:</strong> {{assigned_by.username}} (GitHub: <a
                  class="github-id" href="https://github.com/{{assigned_by.github_id}}" target="_blank"><i
                    class="fas fa-external-link-alt"></i>{{assigned_by.github_id}}</a>)</p>
              <p><strong><i class="fas fa-tasks"></i> Task:</strong> {{description}}</p>
              <p><strong><a class="github-id" href={{repository_link}} target="_blank"><i
                      class="fas fa-external-link-alt"></i>Link To Repository</strong></a></p>
            </div>
        {{else}}
          {{/ifCond}}
        {{/each}}
      </div>
      <div class="column" id="working">
        <h2>In Progress</h2>
        {{#each tasks}}
          {{#ifCond status "Working"}}
            <div class="task" draggable="true">
              <p><strong><i class="fas fa-calendar-alt"></i> Assigned at:</strong> {{assigned_at}}</p>
              <p><strong><i class="fas fa-user-check"></i>Assigned by:</strong> {{assigned_by.username}} (GitHub: <a
                  class="github-id" href="https://github.com/{{assigned_by.github_id}}" target="_blank"><i
                    class="fas fa-external-link-alt"></i>{{assigned_by.github_id}}</a>)</p>
              <p><strong><i class="fas fa-tasks"></i> Task:</strong> {{description}}</p>
              <p><strong><a class="github-id" href={{repository_link}} target="_blank"><i
                      class="fas fa-external-link-alt"></i>Link To Repository</strong></a></p>
            </div>
        {{else}}
          {{/ifCond}}
        {{/each}}
      </div>
      <div class="column" id="completed">
        <h2>Completed</h2>
        {{#each tasks}}
          {{#ifCond status "Completed"}}
            <div class="task" draggable="true">
              <p><strong><i class="fas fa-calendar-alt"></i> Assigned at:</strong> {{assigned_at}}</p>
              <p><strong><i class="fas fa-user-check"></i>Assigned by:</strong> {{assigned_by.username}} (GitHub: <a
                  class="github-id" href="https://github.com/{{assigned_by.github_id}}" target="_blank"><i
                    class="fas fa-external-link-alt"></i>{{assigned_by.github_id}}</a>)</p>
              <p><strong><i class="fas fa-tasks"></i> Task:</strong> {{description}}</p>
              <p><strong><a class="github-id" href={{repository_link}} target="_blank"><i
                      class="fas fa-external-link-alt"></i>Link To Repository</strong></a></p>
            </div>
        {{else}}
          {{/ifCond}}
        {{/each}}
      </div>
    </div>
  </div>
  </div>
  <!-- Scroll-to-top button -->
  <div class="scroll-top" onclick="window.scrollTo({ top: 0, behavior: 'smooth' });">
    <i class="fas fa-arrow-up"></i>
  </div>
  <script>
    window.addEventListener('scroll', function () {
      const navbar = document.getElementById('navbar');
      if (window.scrollY > 50) {
        navbar.classList.add('scrolled');
      } else {
        navbar.classList.remove('scrolled');
      }
    });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const tasks = document.querySelectorAll('.task');
      const columns = document.querySelectorAll('.column');

      tasks.forEach(task => {
        task.addEventListener('dragstart', (e) => {
          task.classList.add('dragging');
          requestAnimationFrame(() => task.style.opacity = "0.5");
        });

        task.addEventListener('dragend', () => {
          task.classList.remove('dragging');
          task.style.opacity = "1";
        });
      });

      columns.forEach(column => {
        column.addEventListener('dragover', (e) => {
          e.preventDefault();
          const dragging = document.querySelector('.dragging');
          const afterElement = getDragAfterElement(column, e.clientY);

          column.classList.add('active-drop');

          if (afterElement) {
            column.insertBefore(dragging, afterElement);
          } else {
            column.appendChild(dragging);
          }
        });

        column.addEventListener('dragenter', () => {
          column.classList.add('highlight');
        });

        column.addEventListener('dragleave', () => {
          column.classList.remove('highlight', 'active-drop');
        });

        column.addEventListener('drop', () => {
          column.classList.remove('highlight', 'active-drop');
        });
      });

      function getDragAfterElement(column, y) {
        const draggableElements = [...column.querySelectorAll('.task:not(.dragging)')];
        let closest = null;
        let minOffset = Number.NEGATIVE_INFINITY;

        draggableElements.forEach(child => {
          const box = child.getBoundingClientRect();
          const offset = y - box.top - box.height / 2;

          if (offset < 0 && offset > minOffset) {
            minOffset = offset;
            closest = child;
          }
        });

        return closest;
      }
    });
  </script>
</body>

</html>