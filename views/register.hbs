<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Register Form</title>

  <link rel="icon" href="/logo.jpeg" type="image/icon type">

  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  
  <!-- Font Awesome for Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Roboto', sans-serif;
    }

    body {
      background-image: url("/Home1.jpg");
      background-repeat: no-repeat;
      background-position: center center;
      background-attachment: fixed;
      background-size: cover;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      color: #f0f0f0;
      overflow: hidden; 
    }

    /* Navbar Styles */
    .navbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 30px;
      background: transparent; 
      position: fixed;
      width: 100%;
      top: 0;
      z-index: 1000;
    }

    .navbar .logo {
      display: flex;
      align-items: center;
    }

    .navbar .logo img {
      height: 40px;
      margin-right: 10px;
      transition: transform 0.3s ease;
    }

    .navbar .logo img:hover {
      transform: rotate(10deg);
    }

    .navbar .logo span {
      font-size: 24px;
      font-weight: bold;
      letter-spacing: 2px;
      color: #fff;
      text-shadow: 0px 0px 5px rgba(255, 255, 255, 0.8);
    }

    .navbar .nav-links a {
      display: inline-block;
      padding: 10px 20px;
      margin-left: 15px;
      background-image: linear-gradient(45deg, #6a11cb, #2575fc);
      color: #fff;
      text-decoration: none;
      border-radius: 25px;
      font-size: 16px;
      font-weight: bold;
      transition: background-image 0.3s ease, transform 0.3s ease;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      position: relative;
    }

    .navbar .nav-links a::after {
      content: '';
      position: absolute;
      width: 0%;
      height: 2px;
      bottom: -5px;
      left: 0;
      background-color: #fff;
      transition: width 0.3s;
    }

    .navbar .nav-links a:hover::after {
      width: 100%;
    }

    .navbar .nav-links a:hover {
      background-image: linear-gradient(45deg, #5d09b1, #1f65e3);
      transform: scale(1.05);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
    }

    /* Register Container */
    /* Increased max-width and padding of register-container */
.register-container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  max-width: 1000px; /* Increased from 900px */
  padding-top: 100px;
  padding-bottom: 0;
}

/* Adjusted size and padding of the register-box */
.register-box {
  display: flex;
  align-items: stretch;
  background: rgba(0, 0, 0, 0.6);
  border-radius: 20px;
  padding: 40px; /* Increased padding */
  backdrop-filter: blur(10px);
  width: 100%;
  max-height: 90vh; /* Increased max-height */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
}


    /* Logo section adjustments */
.logo-section {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: #fff;
  padding-right: 30px; /* Increased padding */
}

.logo-image {
  width: 120px; /* Slightly increased logo size */
  height: 120px;
  margin-bottom: 30px;
}

    .logo-text h1 {
      font-size: 36px;
      margin-bottom: 10px;
    }

    .logo-text p {
      font-size: 14px;
      color: #ccc;
      text-align: center;
      max-width: 200px;
    }

    /* Partition line adjustments */
.partition {
  width: 1px; /* Ensures it displays as a vertical line */
  background-color: rgba(255, 255, 255, 0.3); /* Adds visibility */
  margin: 0 40px;
}

/* Illustration adjustments */
.illustration-container {
  display: flex;
  justify-content: center; /* Center the illustration */
  align-items: center;
  margin: 20px 0; /* Adds some margin to separate it from other elements */
}

.illustration-icon {
  font-size: 150px; /* Increase the size of the icon */
  color: #fff; /* Ensures the icon stays visible against the background */
  margin-top: 20px; /* Adds a bit more space above the icon */
}    
    .illustration-icon:hover {
      color: #ff4b2b; 
      transform: scale(1.1); 
      transition: all 0.3s ease;
    }

    .register-form {
  flex: 2;
  display: flex;
  flex-direction: column;
  padding-left: 30px; /* Increased padding */
}

.form-group {
  margin-bottom: 20px; /* Increased spacing between form groups */
  position: relative;
}

.form-group label {
  color: #fff;
  font-size: 15px; /* Increased label font size */
  margin-bottom: 8px;
  display: block;
}

.input-container {
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
}

    .input-container input {
  width: 100%;
  padding: 12px 12px 12px 55px; /* Increased padding inside input */
  border: none;
  border-radius: 5px;
  outline: none;
  background: rgba(255, 255, 255, 0.2);
  color: #fff;
  font-size: 15px; /* Slightly increased input font size */
}

    .input-container input:focus {
      background: rgba(255, 255, 255, 0.3);
    }

    .input-icon {
  position: absolute;
  left: 18px;
  top: 50%;
  transform: translateY(-50%);
  color: #ccc;
  font-size: 20px; /* Slightly increased icon size */
}

    .input-divider {
      position: absolute;
      left: 45px;
      top: 10px;
      bottom: 10px;
      width: 1px;
      background-color: rgba(255, 255, 255, 0.3);
    }

    /* Increased spacing between GitHub ID and Password fields */
.form-group:last-of-type {
  margin-top: 30px; /* Adjust margin between GitHub ID and next field (password) */
}

    /* Increased button size and padding */
.register-button {
  width: 100%;
  background-image: linear-gradient(45deg, #ff416c, #ff4b2b);
  color: #fff;
  border: none;
  padding: 18px; /* Increased padding */
  border-radius: 30px;
  cursor: pointer;
  box-shadow: 0 4px 15px rgba(255, 0, 0, 0.3);
  font-size: 20px; /* Increased button font size */
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 15px; /* Increased margin-top for spacing */
  transition: transform 0.3s ease, background-image 0.3s ease;
}

    .register-button:hover {
      background-image: linear-gradient(45deg, #e60039, #e63900);
      transform: translateY(-2px);
    }

    .register-button i {
      margin-right: 10px;
    }

    .error-message {
      color: #ff4b2b;
      margin-top: 10px;
      font-size: 14px;
      text-align: center;
    }

    .login-link {
      text-align: center;
      margin-top: 15px;
      color: #ccc;
      font-size: 16px;
    }

    /* Adjust spacing between form and register button */
.login-link {
  text-align: center;
  margin-top: 20px;
  color: #ccc;
  font-size: 16px;
}

.login-link a {
  color: #ff4b2b;
  text-decoration: none;
  font-size: 16px;
}

    /* Responsive Styles */
    @media (max-width: 992px) {
      .register-box {
        flex-direction: column;
        max-height: 95vh;
      }

      .partition {
        width: 100%;
        height: 1px;
        margin: 20px 0;
      }

      .illustration-container {
        padding-left: 0;
        margin-bottom: 20px;
      }

      .register-form {
        padding-left: 0;
      }

      .illustration-icon {
        font-size: 80px; 
    }
  </style>

  <script>
    var sha256 = function sha256(ascii) {
      function rightRotate(value, amount) {
          return (value>>>amount) | (value<<(32 - amount));
      };
      var mathPow = Math.pow;
      var maxWord = mathPow(2, 32);
      var lengthProperty = 'length';
      var i, j;
      var result = '';
      var words = [];
      var asciiBitLength = ascii[lengthProperty]*8;
      var hash = sha256.h = sha256.h || [];
      var k = sha256.k = sha256.k || [];
      var primeCounter = k[lengthProperty];
      var isComposite = {};
      for (var candidate = 2; primeCounter < 64; candidate++) {
          if (!isComposite[candidate]) {
              for (i = 0; i < 313; i += candidate) {
                  isComposite[i] = candidate;
              }
              hash[primeCounter] = (mathPow(candidate, .5)*maxWord)|0;
              k[primeCounter++] = (mathPow(candidate, 1/3)*maxWord)|0;
          }
      }
      ascii += '\x80';
      while (ascii[lengthProperty]%64 - 56) ascii += '\x00';
      for (i = 0; i < ascii[lengthProperty]; i++) {
          j = ascii.charCodeAt(i);
          if (j>>8) return;
          words[i>>2] |= j << ((3 - i)%4)*8;
      }
      words[words[lengthProperty]] = ((asciiBitLength/maxWord)|0);
      words[words[lengthProperty]] = (asciiBitLength);
      for (j = 0; j < words[lengthProperty];) {
          var w = words.slice(j, j += 16);
          var oldHash = hash;
          hash = hash.slice(0, 8);
          for (i = 0; i < 64; i++) {
              var i2 = i + j;
              var w15 = w[i - 15], w2 = w[i - 2];
              var a = hash[0], e = hash[4];
              var temp1 = hash[7]
                  + (rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25))
                  + ((e&hash[5])^((~e)&hash[6]))
                  + k[i]
                  + (w[i] = (i < 16) ? w[i] : (
                          w[i - 16]
                          + (rightRotate(w15, 7) ^ rightRotate(w15, 18) ^ (w15>>>3))
                          + w[i - 7]
                          + (rightRotate(w2, 17) ^ rightRotate(w2, 19) ^ (w2>>>10))
                      )|0
                  );
              var temp2 = (rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22))
                  + ((a&hash[1])^(a&hash[2])^(hash[1]&hash[2]));
              hash = [(temp1 + temp2)|0].concat(hash);
              hash[4] = (hash[4] + temp1)|0;
          }
          for (i = 0; i < 8; i++) {
              hash[i] = (hash[i] + oldHash[i])|0;
          }
      }
      for (i = 0; i < 8; i++) {
          for (j = 3; j + 1; j--) {
              var b = (hash[i]>>(j*8))&255;
              result += ((b < 16) ? '0' : '') + b.toString(16);
          }
      }
      return result;
    };

    function validateForm() {
      var username = document.getElementById("username").value;
      var email = document.getElementById("email").value;
      var password = document.getElementById("password").value;
      var confirmPassword = document.getElementById("confirm-password").value;

      if (password !== confirmPassword) {
        document.getElementById("error-message").innerText = "Passwords do not match";
        return false;
      }

      var emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailPattern.test(email)) {
        document.getElementById("error-message").innerText = "Invalid email address";
        return false;
      }

      var usernameRegex = /^[a-zA-Z0-9_]+$/;
      if (!usernameRegex.test(username)) {
        document.getElementById("error-message").innerText = "Username can only contain letters, numbers, and underscores.";
        return false;
      }

      var passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d@$!%*?&]{8,}$/;
      if (!passwordRegex.test(password)) {
        document.getElementById("error-message").innerText = "Password must be at least 8 characters long and contain at least one letter, one number, and may include special characters.";
        return false;
      }

      document.getElementById("encryptedpassword").value = sha256(password);
      document.getElementById("error-message").innerText = "";
      return true;
    }
  </script>
</head>

<body>
  <div class="navbar">
    <div class="logo">
      <img src="/logo.jpeg" alt="Git Helper Logo">
      <span>Git Helper</span>
    </div>
    <div class="nav-links">
      <a href="/home"><i class="fas fa-home"></i> Home</a>
      <a href="/error/faq"><i class="fas fa-question-circle"></i> FAQ</a>
    </div>
  </div>

  <div class="register-container">
    <div class="register-box">
      <div class="logo-section">
        <img class="logo-image" src="/logo.jpeg" alt="Logo">
        <div class="logo-text">
          <h1>Git Helper</h1>
        </div>
      </div>

      <div class="partition"></div>

      <div class="illustration-container">
        <i class="fas fa-user-plus illustration-icon" aria-hidden="true"></i>
      </div>

      
      <form id="register-form" class="register-form" action="/api/register" method="post" onsubmit="return validateForm()">

        <div class="form-group">
          <label for="username">Username</label>
          <div class="input-container">
            <i class="fas fa-user input-icon"></i>
            <div class="input-divider"></div>
            <input type="text" id="username" placeholder="Username" name="username" required>
          </div>
        </div>

        <div class="form-group">
          <label for="email">Email</label>
          <div class="input-container">
            <i class="fas fa-envelope input-icon"></i>
            <div class="input-divider"></div>
            <input type="email" placeholder="Email" id="email" name="email" required>
          </div>
        </div>

          <div class="form-group">
  <label for="github-id">GitHub ID</label>
  <div class="input-container">
    <i class="fab fa-github input-icon"></i>
    <div class="input-divider"></div>
    <input type="text" placeholder="GitHub ID" id="github_id" name="github_id" required>
  </div>
</div>

        <div class="form-group">
          <label for="password">Password</label>
          <div class="input-container">
            <i class="fas fa-lock input-icon"></i>
            <div class="input-divider"></div>
            <input type="password" placeholder="Password" id="password" required>
          </div>
        </div>

        <div class="form-group">
          <label for="confirm-password">Confirm Password</label>
          <div class="input-container">
            <i class="fas fa-lock input-icon"></i>
            <div class="input-divider"></div>
            <input type="password" placeholder="Confirm Password" id="confirm-password" required>
            <input type="password" name="encryptedpassword" id="encryptedpassword" required readonly hidden>
          </div>
        </div>

        <button type="submit" class="register-button"><i class="fas fa-rocket"></i> Register</button>
        
        <p id="error-message" class="error-message"></p>
        <div class="login-link">
          <p>Already have an account? <a href="/api/login">Login</a></p>
        </div>
      </form>
    </div>
  </div>

</body>
</html>
